name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  lint-scripts:
    name: Lint Bash Scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: './scripts'
          severity: warning

  lint-makefile:
    name: Validate Makefile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check Makefile syntax
        run: make --dry-run check-prerequisites || true

  lint-docs:
    name: Check Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check Markdown links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          config-file: '.github/markdown-link-check-config.json'

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci || echo "No package.json yet - skipping"

      - name: Run tests
        run: npm test || echo "No tests configured yet - skipping"

  validate-structure:
    name: Validate Project Structure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check required files
        run: |
          set -e
          echo "Checking required files..."

          required_files=(
            "README.md"
            "LICENSE"
            "Makefile"
            "scripts/setup-complete-project.sh"
            "scripts/create-project-accounts.sh"
            "scripts/bootstrap-cdk.sh"
            "scripts/setup-github-cicd.sh"
            "scripts/setup-github-repo.sh"
            "scripts/setup-billing-alerts.sh"
          )

          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ Missing required file: $file"
              exit 1
            else
              echo "✅ Found: $file"
            fi
          done

      - name: Check script permissions
        run: |
          echo "Checking script permissions..."
          for script in scripts/*.sh; do
            if [ ! -x "$script" ]; then
              echo "⚠️  Script not executable: $script"
              chmod +x "$script"
            else
              echo "✅ Executable: $script"
            fi
          done

  cdk-synth:
    name: CDK Synth Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: CDK Synth (validate infrastructure)
        run: |
          echo "Running CDK synth to validate infrastructure..."
          export ENV=dev
          export PROJECT_CODE=TEST
          export CDK_DEFAULT_ACCOUNT=123456789012
          export CDK_DEFAULT_REGION=us-east-1

          cdk synth --all --quiet

          echo "✅ CDK synth completed successfully"
          echo "This validates TypeScript compilation and CDK construct validity"

      - name: Check generated CloudFormation templates
        run: |
          echo "Checking generated CloudFormation templates..."

          if [ -d "cdk.out" ]; then
            echo "✅ cdk.out directory created"

            # List generated templates
            echo "Generated templates:"
            ls -lh cdk.out/*.template.json || true

            # Validate at least one template exists
            template_count=$(ls cdk.out/*.template.json 2>/dev/null | wc -l)
            if [ "$template_count" -gt 0 ]; then
              echo "✅ Generated $template_count CloudFormation template(s)"
            else
              echo "❌ No CloudFormation templates generated"
              exit 1
            fi
          else
            echo "❌ cdk.out directory not found"
            exit 1
          fi
